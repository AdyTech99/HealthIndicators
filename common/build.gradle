architectury {
    common rootProject.enabled_platforms.split(',')
}

repositories {
    maven{
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_fabric}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    modApi "com.terraformersmc:modmenu:${project.modmenu}"
}

loom {
    accessWidenerPath = file("src/main/resources/healthindicators.accesswidener")
}

// Completely disable incremental compilation
/* tasks.withType(JavaCompile) {
    options.incremental = false
    doNotTrackState("Avoiding OneDrive sync issues")
    outputs.upToDateWhen { false }
} */

// Force clean compile
/* compileJava {
    dependsOn 'clean'
    options.incremental = false
    doNotTrackState("Avoiding OneDrive sync issues")
    outputs.upToDateWhen { false }
} */

// Disable caching for this module
tasks.configureEach {
    outputs.cacheIf { false }
}